.\" Generated by scdoc 1.11.3
.\" Complete documentation for this program is not available as a GNU info page
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.nh
.ad l
.\" Begin generated content:
.TH "OCHAMI" "1" "2024-11-19" "OpenCHAMI" "Manual Page for ochami"
.PP
.SH NAME
.PP
ochami - OpenCHAMI command line interface
.PP
.SH SYNOPSIS
.PP
ochami [OPTIONS] COMMAND
.PP
.SH DESCRIPTION
.PP
\fBochami\fR is a command line interface tool that interacts with the OpenCHAMI API.\&
It is meant to provide a convenience so one need not craft \fBcurl\fR incantations,
but also provide additional features.\&
.PP
List of available commands:
.PP
.TS
allbox;l lx
l lx
l lx
l lx
l lx
l lx.
T{
\fBCommand\fR
T}	T{
\fBDescription\fR
T}
T{
\fBbss\fR
T}	T{
Communicate with the Boot Script Service (BSS)
T}
T{
\fBcloud-init\fR
T}	T{
Manage cloud-init configurations
T}
T{
\fBdiscover\fR
T}	T{
Simulate discovery of BMCs and nodes to populate SMD by reading an input file
T}
T{
\fBsmd\fR
T}	T{
Communicate with the State Management Database (SMD)
T}
T{
\fBconfig\fR
T}	T{
Manage ochami CLI configuration, including cluster configuration
T}
.TE
.sp 1
.SS Top-Level Commands
.PP
Top-level commands can be thought of as more abstract and admin-friendly.\&
These commands tend not to correspond 1:1 with single HTTP requests.\& For
instance, the \fBdiscover\fR command makes multiple requests to different SMD
endpoints, some of them iteratively.\&
.PP
.SS Low-Level Commands
.PP
Commands that correspond to single HTTP requests ("low-level" commands) are
organized under metacommands corresponding to the service that they send the
request to, under subcommands corresponding to the endpoint of the request.\& For
instance, the \fBsmd\fR command has the \fBcomponent\fR subcommand that deals with SMD'\&s
\fI/Components\fR endpoint.\& This subcommand has further subcommands \fBadd\fR, \fBdelete\fR,
and \fBget\fR which send POST, DELETE, and GET HTTP requests, respectively.\& These
commands are primarily used for manually adding/getting/modifying/deleting data
structures, e.\&g.\& when troubleshooting.\&
.PP
.SH GETTING STARTED
.PP
Upon first running \fBochami\fR, a config file will need to be generated and a basic
cluster configuration will need to be specified.\& Both can be done with the
following command:
.PP
.nf
.RS 4
ochami config cluster set -d -u https://foobar\&.openchami\&.cluster foobar
.fi
.RE
.PP
This will create a cluster called \fIfoobar\fR and set its base URI to
\fIhttps://foobar.\&openchami.\&cluster\fR, placing this config in
\fI~/.\&config/ochami/config.\&yaml\fR.\& Since \fBochami\fR supports multiple cluster
configurations, the \fI-d\fR tells \fBochami\fR to set this cluster as the default
cluster, which means that this cluster'\&s configuration will be used if
\fI--cluster\fR is not specified on the command line.\&
.PP
Once the cluster configuration has been specified, one will need to store a
token to be able to be used to authenticate to protected endpoints without
having to specify \fI--token\fR every time.\& \fBochami\fR will look for an environment
variable named \fB<CLUSTER_NAME>_ACCESS_TOKEN\fR, where \fB<CLUSTER_NAME>\fR is
replaced by the name of the cluster in all capital letters and dashes replaced
by underscores.\& In the above example, this variable would be named
\fBFOOBAR_ACCESS_TOKEN\fR:
.PP
.nf
.RS 4
export FOOBAR_ACCESS_TOKEN=\&.\&.\&.
.fi
.RE
.PP
Once these steps are completed, \fBochami\fR should be ready to use with cluster
\fIfoobar\fR.\&
.PP
.SH GLOBAL OPTIONS
.PP
\fB-u, --base-uri\fR \fIuri\fR
.RS 4
Specify the base URI to use when contacting OpenCHAMI services.\& Overrides
the base URI specified in a config file.\&
.PP
.RE
\fB--cacert\fR \fIcacert\fR
.RS 4
Specify the path to a certificate authority (CA) certificate file to use to
verify TLS certificates.\& Must be PEM-formatted.\&
.PP
.RE
\fB--cluster\fR \fIcluster_name\fR
.RS 4
Specify the name of a cluster to use.\& The cluster corresponding to the
passed cluster name must exist in the config file.\&
.PP
.RE
\fB-c, --config\fR \fIconfig_file\fR
.RS 4
Specify the path to a config file to use.\& By default, this is
\fI~/.\&config/ochami/config.\&yaml\fR.\& The format of this file is assumed to be
YAML unless either the file extension differs from \fIyaml\fR (in which case
\fBochami\fR attempts to infer the format from the file extention) or
\fI--payload-format\fR is specified.\& See the description of \fI--payload-format\fR
for supported config file formats.\&
.PP
.RE
\fB--config-format\fR \fIformat\fR
.RS 4
Explicitly specify the format of the default config file or the config file
passed with \fI--config\fR.\& Supported config formats are:
.PP
.PD 0
.IP \(bu 4
\fIjson\fR
.IP \(bu 4
\fIyaml\fR
.PD
.PP
.RE
\fB--ignore-config\fR
.RS 4
Do not read configuration from any configuration file.\&
.PP
.RE
\fB-k, --insecure\fR
.RS 4
Do not verify TLS certificates.\&
.PP
.RE
\fB--log-format\fR \fIformat\fR
.RS 4
Specify the format of log messages, overriding what is set in the config
file.\& Defaults to \fIjson\fR.\&
.PP
Supported log formats are:
.PP
.PD 0
.IP \(bu 4
\fIbasic\fR
.IP \(bu 4
\fIjson\fR
.IP \(bu 4
\fIrfc3339\fR
.PD
.PP
.RE
\fB-l, --log-level\fR \fIlevel\fR
.RS 4
Specify the level to print log messages at, overriding what is set in the
config file.\& Defaults to \fIwarning\fR.\&
.PP
Supported log levels are:
.PP
.PD 0
.IP \(bu 4
\fIinfo\fR
.IP \(bu 4
\fIwarning\fR
.IP \(bu 4
\fIdebug\fR
.PD
.PP
.RE
\fB-t, --token\fR \fItoken\fR
.RS 4
Access token to include in request headers for authenticated to protected
service endpoints.\& Overrides token set in environment variable.\&
.PP
.RE
.SH FILES
.PP
\fI~/.\&config/ochami/config.\&yaml\fR
.RS 4
The ochami CLI configuration file.\& Generated if non-existent upon
command invocation.\&
.PP
.RE
.SH AUTHOR
.PP
Written by Devon T.\& Bautista and maintained by the OpenCHAMI developers.\&
.PP
.SH SEE ALSO
.PP
\fBochami-bss\fR(1), \fBochami-cloud-init\fR(1), \fBochami-discover\fR(1), \fBochami-smd\fR(1)
.PP
