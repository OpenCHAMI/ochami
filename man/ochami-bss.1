.\" Generated by scdoc 1.11.3
.\" Complete documentation for this program is not available as a GNU info page
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.nh
.ad l
.\" Begin generated content:
.TH "OCHAMI-BSS" "1" "2024-11-22" "OpenCHAMI" "Manual Page for ochami-bss"
.PP
.SH NAME
.PP
ochami-bss - Communicate with the Boot Script Service (BSS)
.PP
.SH SYNOPSIS
.PP
ochami bss [OPTIONS] COMMAND
.PP
.SH DATA STRUCTURE
.PP
The data structure for sending and receiving data with subcommands under the
\fBbss\fR command is (in JSON form):
.PP
.nf
.RS 4
{
  "kernel": "https://example\&.com/kernel",
  "initrd": "https://example\&.com/initrd",
  "params": "quiet nosplash"
}
.fi
.RE
.PP
.SH COMMANDS
.PP
.SS boot params
.PP
Manage boot parameters for components.\&
.PP
Subcommands for this command are as follows:
.PP
\fBadd\fR ([--mac \fImac\fR,.\&.\&.\&] [--nid \fInid\fR,.\&.\&.\&] [--xname \fIxname\fR,.\&.\&.\&]) ([--initrd \fIinitrd\fR] [--kernel \fIkernel\fR])
.br
\fBadd\fR -f \fIfile\fR [--payload-format \fIformat\fR]
.br
\fBadd\fR -f \fI-\fR [--payload-format \fIformat\fR] < \fIfile\fR
.RS 4
Add new boot parameters for one or more components.\& If boot parameters
already exist for the specified components, this command will fail.\&
.PP
In the first form of the command, one or more of \fB--mac\fR, \fB--nid\fR, or
\fB--xname\fR is required to identify which component(s) to add boot config for.\&
One or more of \fB--initrd\fR, \fB--kernel\fR, or \fB--params\fR is also required to
know which boot parameters to add for the specified components.\&  For any of
these options, multiple arguments can be passed either by specifying the
flag multiple times (e.\&g.\& \fB--mac\fR \fImac1\fR \fB--mac\fR \fImac2\fR) or by using one
flag and separating each argument by commas (e.\&g.\& \fB--mac\fR \fImac1\fR,\fImac2\fR).\&
.PP
In the second form of the command, a file containing the payload data is
passed.\& This is convenient in cases of dealing with many components at once.\&
.PP
In the third form of the command, the payload data is read from standard
input.\&
.PP
This command sends a POST request to BSS'\&s /bootparameters endpoint.\&
.PP
This command accepts the following options:
.PP
\fB-f, --payload\fR \fIfile\fR
.RS 4
Specify a file containing the data to send to BSS.\& The format of this
file depends on \fI--payload-format\fR and is \fIjson\fR by default.\& If \fB-\fR is
used as the argument to \fI-f\fR, the command reads the payload data from
standard input.\&
.PP
.RE
\fB--payload-format\fR \fIformat\fR
.RS 4
Format of the file used with \fI-f\fR.\& If unspecified, the payload format is
\fIjson\fR by default.\& Supported formats are: \fIyaml\fR.\&
.PP
.RE
\fB-m, --mac\fR \fImac_addr\fR,.\&.\&.\&
.RS 4
One or more MAC addresses to add boot parameters for.\& For multiple MAC
addresses, either this flag can be specified multiple times or this flag
can be specified once and multiple MAC addresses can be specified,
separated by commas.\&
.PP
.RE
\fB-n, --nid\fR \fInid\fR,.\&.\&.\&
.RS 4
One or more node IDs to add boot parameters for.\& For multiple NIDs,
either this flag can be specified multiple times or this flag can be
specified once and multiple NIDs can be specified, separated by commas.\&
.PP
.RE
\fB-x, --xname\fR \fIxname\fR,.\&.\&.\&
.RS 4
One or more xnames to add boot parameters for.\& For multiple xnames,
either this flag can be specified multiple times or this flag can be
specified once and multiple xnames, separated by commas.\&
.PP
.RE
\fB--initrd\fR \fIinitrd_uri\fR
.RS 4
URI from which to fetch the components'\& initrd.\&
.PP
.RE
\fB--kernel\fR \fIkernel_uri\fR
.RS 4
URI from which to fetch the components'\& kernel.\&
.PP
.RE
\fB--params\fR \fIkernel_params\fR
.RS 4
Command line arguments to pass to kernel for components.\&
.PP
.RE
.RE
\fBdelete\fR [--force] ([--mac, \fImac\fR,.\&.\&.\&] [--nid, \fInid\fR,.\&.\&.\&] [--xname \fIxname\fR,.\&.\&.\&] [--kernel \fIkernel\fR] [--initrd \fIinitrd\fR])
.br
\fBdelete\fR [--force] -f \fIfile\fR [--payload-format \fIformat\fR]
.br
\fBdelete\fR [--force] -f \fI-\fR [--payload-format \fIformat\fR]
.RS 4
Delete boot parameters for one or more components.\& Which boot parameters are
deleted are determined by passed filters, which can be passed via CLI flag
or within a payload file.\& Unless \fB--force\fR is passed, the user is asked to
confirm deletion.\&
.PP
In the first form of the command, one or more of \fB--mac\fR, \fB--nid\fR,
\fB--xname\fR, \fB--kernel\fR, or \fB--initrd\fR is required to identify which
component(s) whose boot parameters to delete.\& For any of these options,
multiple arguments can be passed either by specifying the flag multiple
times (e.\&g.\& \fB--mac\fR \fImac1\fR \fB--mac\fR \fImac2\fR) or by using one flag and
separating each argument by commas (e.\&g.\& \fB--mac\fR \fImac1\fR,\fImac2\fR).\&
.PP
In the second form of the command, a file containing the payload data is
passed.\& This is convenient in cases of dealing with many components at once.\&
.PP
In the third form of the command, the payload data is read from standard
input.\&
.PP
This command sends a DELETE request to BSS'\&s /bootparameters endoint.\&
.PP
This command accepts the following options:
.PP
\fB--force\fR
.RS 4
Do not ask the user to confirm deletion.\& Use with caution.\&
.PP
.RE
\fB-f, --payload\fR \fIfile\fR
.RS 4
Specify a file containing the data to send to BSS.\& The format of this
file depends on \fI--payload-format\fR and is \fIjson\fR by default.\& If \fB-\fR is
used as the argument to \fI-f\fR, the command reads the payload data from
standard input.\&
.PP
.RE
\fB--payload-format\fR \fIformat\fR
.RS 4
Format of the file used with \fI-f\fR.\& If unspecified, the payload format is
\fIjson\fR by default.\& Supported formats are: \fIyaml\fR.\&
.PP
.RE
\fB-m, --mac\fR \fImac_addr\fR,.\&.\&.\&
.RS 4
One or more MAC addresses to delete boot parameters for.\& For multiple
MAC addresses, either this flag can be specified multiple times or this
flag can be specified once and multiple MAC addresses can be specified,
separated by commas.\&
.PP
.RE
\fB-n, --nid\fR \fInid\fR,.\&.\&.\&
.RS 4
One or more node IDs to delete boot parameters for.\& For multiple NIDs,
either this flag can be specified multiple times or this flag can be
specified once and multiple NIDs can be specified, separated by commas.\&
.PP
.RE
\fB-x, --xname\fR \fIxname\fR,.\&.\&.\&
.RS 4
One or more xnames to delete boot parameters for.\& For multiple xnames,
either this flag can be specified multiple times or this flag can be
specified once and multiple xnames, separated by commas.\&
.PP
.RE
\fB--initrd\fR \fIinitrd_uri\fR
.RS 4
URI from which to fetch the components'\& initrd.\&
.PP
.RE
\fB--kernel\fR \fIkernel_uri\fR
.RS 4
URI from which to fetch the components'\& kernel.\&
.PP
.RE
\fB--params\fR \fIkernel_params\fR
.RS 4
Command line arguments to pass to kernel for components.\&
.PP
.RE
.RE
\fBget\fR [--mac \fImac\fR,.\&.\&.\&] [--nid \fInid\fR,.\&.\&.\&] [--xname \fIxname\fR,.\&.\&.\&]
.RS 4
Get boot parameters for all components or a subset of components, filtered
by MAC address, node ID, and/or xname.\&
.PP
This command sends a GET to BSS'\&s /bootparameters endpoint.\&
.PP
This command accepts the following options:
.PP
\fB-m, --mac\fR \fImac_addr\fR,.\&.\&.\&
.RS 4
One or more MAC addresses to filter boot parameters by.\& For multiple MAC
addresses, either this flag can be specified multiple times or this flag
can be specified once and multiple MAC addresses can be specified,
separated by commas.\&
.PP
.RE
\fB-n, --nid\fR \fInid\fR,.\&.\&.\&
.RS 4
One or more node IDs to filter boot parameters by.\& For multiple NIDs,
either this flag can be specified multiple times or this flag can be
specified once and multiple NIDs can be specified, separated by commas.\&
.PP
.RE
\fB-x, --xname\fR \fIxname\fR,.\&.\&.\&
.RS 4
One or more xnames to filter boot parameters by.\& For multiple xnames,
either this flag can be specified multiple times or this flag can be
specified once and multiple xnames, separated by commas.\&
.PP
.RE
.RE
\fBset\fR ([--mac \fImac\fR,.\&.\&.\&] [--nid \fInid\fR,.\&.\&.\&] [--xname \fIxname\fR,.\&.\&.\&]) ([--initrd \fIinitrd\fR] [--kernel \fIkernel\fR])
.br
\fBset\fR -f \fIfile\fR [--payload-format \fIformat\fR]
.br
\fBset\fR -f \fI-\fR [--payload-format \fIformat\fR] < \fIfile\fR
.RS 4
Set boot parameters for one or more components, even if boot parameters
already exist for said components.\& This is handy if one knows what boot
parameters to set for which components, but isn'\&t sure if boot parameters
have already been set for one or more of them.\&
.PP
In the first form of the command, one or more of \fB--mac\fR, \fB--nid\fR, or
\fB--xname\fR is required to identify which component(s) to set boot config for.\&
One or more of \fB--initrd\fR, \fB--kernel\fR, or \fB--params\fR is also required to
know which boot parameters to set for the specified components.\&  For any of
these options, multiple arguments can be passed either by specifying the
flag multiple times (e.\&g.\& \fB--mac\fR \fImac1\fR \fB--mac\fR \fImac2\fR) or by using one
flag and separating each argument by commas (e.\&g.\& \fB--mac\fR \fImac1\fR,\fImac2\fR).\&
.PP
In the second form of the command, a file containing the payload data is
passed.\& This is convenient in cases of dealing with many components at once.\&
.PP
In the third form of the command, the payload data is read from standard
input.\&
.PP
This command sends a PUT request to BSS'\&s /bootparameters endpoint.\&
.PP
This command accepts the following options:
.PP
\fB-f, --payload\fR \fIfile\fR
.RS 4
Specify a file containing the data to send to BSS.\& The format of this
file depends on \fI--payload-format\fR and is \fIjson\fR by default.\& If \fB-\fR is
used as the argument to \fI-f\fR, the command reads the payload data from
standard input.\&
.PP
.RE
\fB--payload-format\fR \fIformat\fR
.RS 4
Format of the file used with \fI-f\fR.\& If unspecified, the payload format is
\fIjson\fR by default.\& Supported formats are: \fIyaml\fR.\&
.PP
.RE
\fB-m, --mac\fR \fImac_addr\fR,.\&.\&.\&
.RS 4
One or more MAC addresses to set boot parameters for.\& For multiple MAC
addresses, either this flag can be specified multiple times or this flag
can be specified once and multiple MAC addresses can be specified,
separated by commas.\&
.PP
.RE
\fB-n, --nid\fR \fInid\fR,.\&.\&.\&
.RS 4
One or more node IDs to set boot parameters for.\& For multiple NIDs,
either this flag can be specified multiple times or this flag can be
specified once and multiple NIDs can be specified, separated by commas.\&
.PP
.RE
\fB-x, --xname\fR \fIxname\fR,.\&.\&.\&
.RS 4
One or more xnames to set boot parameters for.\& For multiple xnames,
either this flag can be specified multiple times or this flag can be
specified once and multiple xnames, separated by commas.\&
.PP
.RE
\fB--initrd\fR \fIinitrd_uri\fR
.RS 4
URI from which to fetch the components'\& initrd.\&
.PP
.RE
\fB--kernel\fR \fIkernel_uri\fR
.RS 4
URI from which to fetch the components'\& kernel.\&
.PP
.RE
\fB--params\fR \fIkernel_params\fR
.RS 4
Command line arguments to pass to kernel for components.\&
.PP
.RE
.RE
\fBupdate\fR ([--mac \fImac\fR,.\&.\&.\&] [--nid \fInid\fR,.\&.\&.\&] [--xname \fIxname\fR,.\&.\&.\&]) ([--initrd \fIinitrd\fR] [--kernel \fIkernel\fR])
.br
\fBupdate\fR -f \fIfile\fR [--payload-format \fIformat\fR]
.br
\fBupdate\fR -f \fI-\fR [--payload-format \fIformat\fR] < \fIfile\fR
.RS 4
Update boot parameters for existing components.\&
.PP
In the first form of the command, one or more of \fB--mac\fR, \fB--nid\fR, or
\fB--xname\fR is required to identify which component(s) to update boot config
for.\& One or more of \fB--initrd\fR, \fB--kernel\fR, or \fB--params\fR is also required
to know which boot parameters to update for the specified components.\&  For
any of these options, multiple arguments can be passed either by specifying
the flag multiple times (e.\&g.\& \fB--mac\fR \fImac1\fR \fB--mac\fR \fImac2\fR) or by using one
flag and separating each argument by commas (e.\&g.\& \fB--mac\fR \fImac1\fR,\fImac2\fR).\&
.PP
In the second form of the command, a file containing the payload data is
passed.\& This is convenient in cases of dealing with many components at once.\&
.PP
In the third form of the command, the payload data is read from standard
input.\&
.PP
This command sends a PUT request to BSS'\&s /bootparameters endpoint.\&
.PP
This command accepts the following options:
.PP
\fB-f, --payload\fR \fIfile\fR
.RS 4
Specify a file containing the data to send to BSS.\& The format of this
file depends on \fI--payload-format\fR and is \fIjson\fR by default.\& If \fB-\fR is
used as the argument to \fI-f\fR, the command reads the payload data from
standard input.\&
.PP
.RE
\fB--payload-format\fR \fIformat\fR
.RS 4
Format of the file used with \fI-f\fR.\& If unspecified, the payload format is
\fIjson\fR by default.\& Supported formats are: \fIyaml\fR.\&
.PP
.RE
\fB-m, --mac\fR \fImac_addr\fR,.\&.\&.\&
.RS 4
One or more MAC addresses to update boot parameters for.\& For multiple
MAC addresses, either this flag can be specified multiple times or this
flag can be specified once and multiple MAC addresses can be specified,
separated by commas.\&
.PP
.RE
\fB-n, --nid\fR \fInid\fR,.\&.\&.\&
.RS 4
One or more node IDs to update boot parameters for.\& For multiple NIDs,
either this flag can be specified multiple times or this flag can be
specified once and multiple NIDs can be specified, separated by commas.\&
.PP
.RE
\fB-x, --xname\fR \fIxname\fR,.\&.\&.\&
.RS 4
One or more xnames to update boot parameters for.\& For multiple xnames,
either this flag can be specified multiple times or this flag can be
specified once and multiple xnames, separated by commas.\&
.PP
.RE
\fB--initrd\fR \fIinitrd_uri\fR
.RS 4
URI from which to fetch the components'\& initrd.\&
.PP
.RE
\fB--kernel\fR \fIkernel_uri\fR
.RS 4
URI from which to fetch the components'\& kernel.\&
.PP
.RE
\fB--params\fR \fIkernel_params\fR
.RS 4
Command line arguments to pass to kernel for components.\&
.PP
.RE
.RE
.SS boot script
.PP
Manage boot scripts for components.\&
.PP
Subcommands for this command are as follows:
.PP
\fBget\fR ([--mac \fImac\fR] [--nid \fInid\fR] [--xname \fIxname\fR])
.RS 4
Get the iPXE boot script for a component.\& Exactly one of \fB--mac\fR, \fB--nid\fR,
or \fB--xname\fR is required to specify the component whose boot script to get.\&
Note that only \fBone\fR component'\&s boot script is fetched.\&
.PP
This command sends a GET to BSS'\&s /bootscript endpoint.\&
.PP
This command accepts the following options:
.PP
\fB-m, --mac\fR \fImac_addr\fR
.RS 4
MAC address corresponding to component whose boot script to get.\&
.PP
.RE
\fB-n, --nid\fR \fInid\fR
.RS 4
Node ID corresponding to component whose boot script to get.\&
.PP
.RE
\fB-x, --xname\fR \fIxname\fR
.RS 4
Xname corresponding to component whose boot script to get.\&
.PP
.RE
.RE
.SS dumpstate
.PP
Dump internal state of BSS for debugging purposes.\& Return known hosts and
associated information, along with the known boot parameter info.\& The format of
the output is similar to the boot parameters struct above with the addition of a
components list.\&
.PP
This command sends a GET to BSS'\&s /dumpstate endpoint.\&
.PP
.SS history
.PP
Print endpoint access history.\& This command outputs a list of logs of accesses
to BSS endpoints with UNIX timestamps.\& Output can be filtered by component name
(xname) that made the access and/or the BSS endpoint accessed.\&
.PP
The format of the command is:
.PP
\fBhistory\fR [--xname \fIxname\fR,.\&.\&.\&] [--endpoint \fIendpoint\fR,.\&.\&.\&]
.PP
This command sends a GET to BSS'\&s /endpoint-history endpoint.\&
.PP
This command accepts the following options:
.PP
\fB--xname\fR \fIxname\fR,.\&.\&.\&
.RS 4
One or more xnames to filter endpoint history results by.\& For multiple
xnames, either this flag can be specified multiple times or this flag can be
specified once and multiple xnames, separated by commas.\&
.PP
.RE
\fB--endpoint\fR \fIendpoint\fR,.\&.\&.\&
.RS 4
One or more endpoint names (e.\&g.\& \fIbootscript\fR, \fIbootparameters\fR) to filter
endpoint history results by.\& For multiple endpoints, either this flag can be
specified multiple times or this flag can be specified once and multiple
endpoints, separated by commas.\&
.PP
.RE
.SS hosts
.PP
Work with hosts in BSS.\&
.PP
Subcommands for this command are as follows:
.PP
\fBget\fR [--mac \fImac\fR,.\&.\&.\&] [--nid \fInid\fR,.\&.\&.\&] [--xname \fIxname\fR,.\&.\&.\&]
.RS 4
Get a list of hosts that BSS knows about that are in SMD.\& These results can
be optionally filtered by MAC address, node ID, or xname.\& If no filters are
specified, all results are returned.\&
.PP
This command sends a GET to BSS'\&s /hosts endpoint.\&
.PP
This command accepts the following options:
.PP
\fB-m, --mac\fR \fImac_addr\fR,.\&.\&.\&
.RS 4
One or more MAC addresses to filter results by.\& For multiple MAC
addresses, either this flag can be specified multiple times or this flag
can be specified once and multiple MAC addresses can be specified,
separated by commas.\&
.PP
.RE
\fB-n, --nid\fR \fInid\fR,.\&.\&.\&
.RS 4
One or more node IDs to filter results by.\& For multiple NIDs, either
this flag can be specified multiple times or this flag can be specified
once and multiple NIDs can be specified, separated by commas.\&
.PP
.RE
\fB-x, --xname\fR \fIxname\fR,.\&.\&.\&
.RS 4
One or more xnames to filter results by.\& For multiple xnames, either
this flag can be specified multiple times or this flag can be specified
once and multiple xnames, separated by commas.\&
.PP
.RE
.RE
.SS status
.PP
Get BSS'\&s status.\& This is useful for checking if BSS is running, if it is
connected to SMD, or checking the storage backend type/connection status.\&
.PP
The format of this command is:
.PP
\fBstatus\fR [--all | --smd | --storage | --version]
.PP
This command sends a GET to endpoints under BSS'\&s /service endpoint.\&
.PP
This command accepts the following options:
.PP
\fB--all\fR
.RS 4
Print out all of the status information BSS knows about.\&
.PP
.RE
\fB--smd\fR
.RS 4
Print out the status of BSS'\&s connection to SMD.\&
.PP
.RE
\fB--storage\fR
.RS 4
Print out the backend storage type and connection status of BSS to that
storage backend.\&
.PP
.RE
\fB--version\fR
.RS 4
Print out BSS'\&s version.\&
.PP
.RE
.SH AUTHOR
.PP
Written by Devon T.\& Bautista and maintained by the OpenCHAMI developers.\&
.PP
