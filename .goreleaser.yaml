version: 2

before:
  hooks:
    - go mod tidy
    - bash -c 'for src in man/*.sc; do scdoc < $src > ${src%.*}; done'
    - ./scripts/completions.sh

builds:
  - ldflags:
      - "-s -w -trimpath"
      - "-X=github.com/OpenCHAMI/ochami/internal/version.Version={{ .Version }} \
         -X=github.com/OpenCHAMI/ochami/internal/version.Tag={{ .Tag }} \
         -X=github.com/OpenCHAMI/ochami/internal/version.Branch={{ .Branch }} \
         -X=github.com/OpenCHAMI/ochami/internal/version.Commit={{ .Commit }} \
         -X=github.com/OpenCHAMI/ochami/internal/version.Date={{ .Date }} \
         -X=github.com/OpenCHAMI/ochami/internal/version.GoVersion={{ .Env.GOVERSION }} \
         -X=github.com/OpenCHAMI/ochami/internal/version.GitState={{ .GitTreeState }} \
         -X=github.com/OpenCHAMI/ochami/internal/version.BuildHost={{ .Env.BUILD_HOST }} \
         -X=github.com/OpenCHAMI/ochami/internal/version.BuildUser={{ .Env.BUILD_USER }}"
    goos:
      - linux
      - darwin
      - windows
    goarch:
      - amd64
      - arm64
    goamd64:
      - v1
    goarm64:
      - v8.0
    env:
      - CGO_ENABLED=0
      - GOPROXY=https://proxy.golang.org,direct

archives:
  - format_overrides:
      - formats:
          - tar.gz
    # this name template makes the OS and Arch compatible with the results of uname.
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    files:
      - LICENSE
      - completions/
      - doc/
      - man/*.1
      - man/*.5

nfpms:
  - id: ochami
    formats:
      - deb
      - rpm
      - apk
      - archlinux
    maintainer: "Devon T. Bautista <devonb@lanl.gov>"
    description: "Command line interface for OpenCHAMI services"
    homepage: "https://www.openchami.org"
    license: MIT
    section: utils
    priority: optional
    contents:
      - src: completions/ochami.bash
        dst: /usr/share/bash-completion/completions/ochami
        file_info:
          mode: 0644
      - src: completions/ochami.fish
        dst: /usr/share/fish/vendor_completions.d/ochami.fish
        file_info:
          mode: 0644
      - src: completions/ochami.zsh
        dst: /usr/share/zsh/site-functions/_ochami
        file_info:
          mode: 0644
      - src: doc/config.example.yaml
        dst: /usr/share/doc/ochami/config.example.yaml
        file_info:
          mode: 0644
      - src: man/*.1
        dst: /usr/share/man/man1/
        file_info:
          mode: 0644
      - src: man/*.5
        dst: /usr/share/man/man5/
        file_info:
          mode: 0644

aurs:
  - name: ochami-bin
    homepage: https://github.com/OpenCHAMI/ochami
    description: "Command line interface for OpenCHAMI services"
    maintainers:
      - "Devon T. Bautista <devonb@lanl.gov>"
    license: "MIT"
    private_key: "{{ .Env.AUR_SSH_KEY }}"
    git_url: ssh://aur@aur.archlinux.org/ochami-bin.git
    url_template: "https://github.com/OpenCHAMI/ochami/releases/download/{{ .Tag }}/{{ .ArtifactName }}"
    backup:
      - etc/ochami/config.yaml
    conflicts:
      - ochami-git
    optdepends:
      - 'bash-completion: for bash completion support'
      - 'jq: for pretty-printing JSON'
      - 'zsh-completions: for zsh completion support'
    commit_author:
      name: goreleaserbot
      email: 17506592+synackd@users.noreply.github.com
    package: |-
      # Binary
      install -Dm755 "./ochami" "${pkgdir}/usr/bin/ochami"

      # License
      install -Dm644 "./LICENSE" "${pkgdir}/usr/share/licenses/ochami/LICENSE"

      # Completions
      install -Dm644 "./completions/ochami.bash" "${pkgdir}/usr/share/bash-completion/completions/ochami"
      install -Dm644 "./completions/ochami.fish" "${pkgdir}/usr/share/fish/vendor_completions.d/ochami.fish"
      install -Dm644 "./completions/ochami.zsh" "${pkgdir}/usr/share/zsh/site-functions/_ochami"

      # Config
      install -Dm644 "./doc/config.example.yaml" "${pkgdir}/usr/share/doc/ochami/config.example.yaml"

      # Man pages
      mkdir -p "${pkgdir}/usr/share/man/man1"
      mkdir -p "${pkgdir}/usr/share/man/man5"
      install -Dm644 ./man/*.1 "${pkgdir}/usr/share/man/man1/"
      install -Dm644 ./man/*.5 "${pkgdir}/usr/share/man/man5/"

signs:
  - artifacts: package
    cmd: rpmsign
    args:
      - --addsign
      - "{{ .ArtifactPath }}"
    env:
      - GPG_TTY=$(tty) # Ensures signing works in GitHub Actions
      - RPM_SIGN_PASSPHRASE={{ .Env.NFPM_RPM_PASSPHRASE }}

dockers:
  - dockerfile: goreleaser.dockerfile
    image_templates:
      - &amd64_linux_image ghcr.io/openchami/{{ .ProjectName }}:{{ .Tag }}-amd64
      - ghcr.io/openchami/{{ .ProjectName }}:v{{ .Major }}-amd64
      - ghcr.io/openchami/{{ .ProjectName }}:v{{ .Major }}.{{ .Minor }}-amd64
    use: buildx
    goarch: amd64
    build_flag_templates:
      - "--pull"
      - "--platform=linux/amd64"
      - "--label=org.opencontainers.image.created={{ .Date }}"
      - "--label=org.opencontainers.image.title={{ .ProjectName }}"
      - "--label=org.opencontainers.image.revision={{ .FullCommit }}"
      - "--label=org.opencontainers.image.version={{ .Version }}"
    extra_files:
      - LICENSE
  - dockerfile: goreleaser.dockerfile
    image_templates:
      - &arm64v8_linux_image ghcr.io/openchami/{{ .ProjectName }}:{{ .Tag }}-arm64
      - ghcr.io/openchami/{{ .ProjectName }}:v{{ .Major }}-arm64
      - ghcr.io/openchami/{{ .ProjectName }}:v{{ .Major }}.{{ .Minor }}-arm64
    use: buildx
    goarch: arm64
    build_flag_templates:
      - "--pull"
      - "--platform=linux/amd64"
      - "--label=org.opencontainers.image.created={{ .Date }}"
      - "--label=org.opencontainers.image.title={{ .ProjectName }}"
      - "--label=org.opencontainers.image.revision={{ .FullCommit }}"
      - "--label=org.opencontainers.image.version={{ .Version }}"
    extra_files:
      - LICENSE

docker_manifests:
  - name_template: "ghcr.io/openchami/{{ .ProjectName }}:latest"
    image_templates:
      - *amd64_linux_image
      - *arm64v8_linux_image
  - name_template: "ghcr.io/openchami/{{ .ProjectName }}:{{ .Tag }}"
    image_templates:
      - *amd64_linux_image
      - *arm64v8_linux_image
  - name_template: "ghcr.io/openchami/{{ .ProjectName }}:{{ .Major }}"
    image_templates:
      - *amd64_linux_image
      - *arm64v8_linux_image
  - name_template: "ghcr.io/openchami/{{ .ProjectName }}:{{ .Major }}.{{ .Minor }}"
    image_templates:
      - *amd64_linux_image
      - *arm64v8_linux_image

checksum:
  algorithm: sha256
  name_template: "sha256sums.txt"

changelog:
  sort: asc
  use: github
  groups:
    - title: Features
      regexp: '^.*?feat(\([[:print:]]+\))??!?:.+$'
      order: 0
    - title: Fixes
      regexp: '^.*?fix(\([[:print:]]+\))??!?:.+$'
      order: 1
    - title: Documentation
      regexp: '^.*?docs(\([[:print:]]+\))??!?:.+$'
      order: 2
    - title: Build System
      regexp: '^.*?(build|ci)(\([[:print:]]+\))??!?:.+$'
      order: 3
    - title: Other
      order: 999

snapshot:
  version_template: "{{ .Tag }}-{{ .ShortCommit }}-snapshot"

release:
  github:
  name_template: "v{{ .Version }}"
  prerelease: auto
  mode: replace
  extra_files:
    - glob: /home/runner/.gnupg/public.key
      name_template: "{{ .ProjectName }}-public.key"
